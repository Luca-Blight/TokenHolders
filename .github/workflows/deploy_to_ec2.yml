name: Deploy to existing EC2

on:
  push:
    branches:
      - main
      - build_fix

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ALCHEMY_URL: ${{ secrets.ALCHEMY_URL }}
      PG_USER: ${{ secrets.PG_USER }}
      PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
      PG_DB: ${{ secrets.PG_DB }}
      PG_HOST: ${{ secrets.PG_HOST }}
      PG_PORT: ${{ secrets.PG_PORT }}
      CONTRACT_ADDRESS: ${{ secrets.CONTRACT_ADDRESS }}
      INDEXING_STRATEGY: ${{ secrets.INDEXING_STRATEGY }}
      FROM_BLOCK: ${{ secrets.FROM_BLOCK }}
      TO_BLOCK: ${{ secrets.TO_BLOCK }}
      ECR_REPOSITORY: 954247117315.dkr.ecr.us-east-1.amazonaws.com
      AWS_REGION: us-east-1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker images
        run: |
          docker build -t $ECR_REPOSITORY/api:latest -f app/server/Dockerfile .
          docker build -t $ECR_REPOSITORY/indexer:latest -f app/indexers/Dockerfile .
          docker push $ECR_REPOSITORY/api:latest
          docker push $ECR_REPOSITORY/indexer:latest

      - name: Deploy to existing EC2 instance
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@$PUBLIC_IP "mkdir -p /home/ubuntu/my_project"
          scp -i private_key.pem -o StrictHostKeyChecking=no -r $(pwd)/* ubuntu@$PUBLIC_IP:/home/ubuntu/my_project
          ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@$PUBLIC_IP "sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common unzip && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" && sudo rm /etc/apt/sources.list.d/docker.list && sudo apt-get update && sudo apt-get install -y docker-ce && sudo systemctl start docker && sudo usermod -aG docker ubuntu && curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" && unzip -o awscliv2.zip && sudo ./aws/install --update && aws ecr get-login-password --region $AWS_REGION | sudo docker login --username AWS --password-stdin $ECR_REPOSITORY && cd /home/ubuntu/my_project && echo -e \"ALCHEMY_URL=$ALCHEMY_URL\nINDEXING_STRATEGY=$INDEXING_STRATEGY\nCONTRACT_ADDRESS=$CONTRACT_ADDRESS\nFROM_BLOCK=$FROM_BLOCK\nTO_BLOCK=$TO_BLOCK\nPOSTGRES_USER=$PG_USER\nPOSTGRES_PASSWORD=$PG_PASSWORD\nPOSTGRES_DB=$PG_DB\nPOSTGRES_HOST=$PG_HOST\nPOSTGRES_PORT=$PG_PORT\nECR_REPOSITORY=$ECR_REPOSITORY\" > .env && sudo docker compose --env-file .env up -d && rm .env"
          rm -f private_key.pem
